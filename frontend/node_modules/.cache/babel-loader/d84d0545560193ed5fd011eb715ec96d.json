{"ast":null,"code":"var _jsxFileName = \"/Users/king_ahmed1421/Simba/Ahmed/frontend/src/gallery/gallery.js\";\nimport './gallery.css';\nimport { Stack, Button, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function SlideShow(props) {\n  const images = props.images;\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    id: props.id,\n    direction: \"row\",\n    className: \"pause width-100 slideshow scroll margin-10px\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex align-center\",\n      children: images.length > 0 ? images.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"margin-5px image box-shadow\",\n          src: item.default,\n          alt: \"\"\n        }, `pic${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 29\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_c = SlideShow;\nexport function Shuffle(props) {\n  const images = props.images;\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    id: props.id,\n    direction: \"row\",\n    className: \"width-100 shuffle scroll margin-10px\",\n    children: images.length > 0 ? images.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"margin-5px image\",\n        src: item.default,\n        alt: \"\"\n      }, `pic${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Shuffle;\nexport function Rotate(props) {\n  const images = props.images;\n  const browser = navigator.userAgent.toLowerCase().includes(\"chrome\") ? \"chrome\" : \"safari\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: props.id,\n    className: \"width-100 height-75vw margin-20px flex justify-center\",\n    children: images.map((image, index) => {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        className: `${image['color']} gallery-project-box box-shadow cycle-start${index}-animation-${browser} padding-0 pointer flex column opacity-95`,\n        onClick: () => {\n          window.location = image['link'];\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: \"text-white font-2-5vw\",\n          children: image['title']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: \"text-white font-1-5vw width-90\",\n          children: image['description']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${image['img'].default}`,\n          alt: \"\",\n          className: \"width-40 margin-top-20px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 22\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_c3 = Rotate;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SlideShow\");\n$RefreshReg$(_c2, \"Shuffle\");\n$RefreshReg$(_c3, \"Rotate\");","map":{"version":3,"sources":["/Users/king_ahmed1421/Simba/Ahmed/frontend/src/gallery/gallery.js"],"names":["Stack","Button","Typography","SlideShow","props","images","id","length","map","item","index","default","Shuffle","Rotate","browser","navigator","userAgent","toLowerCase","includes","image","window","location"],"mappings":"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","sourcesContent":["import './gallery.css';\nimport {Stack, Button, Typography} from '@mui/material';\n\nexport function SlideShow(props) {\n    const images = props.images;\n    return (\n        <Stack id={props.id} direction=\"row\" className=\"pause width-100 slideshow scroll margin-10px\">\n            <div className=\"flex align-center\">\n            {images.length > 0 ?\n                images.map((item, index) => {\n                    return (<img className=\"margin-5px image box-shadow\" key={`pic${index}`} src={item.default} alt=\"\"/>);\n                    }) :  <></>}\n            </div>\n        </Stack>    \n    )\n}\n\nexport function Shuffle(props) {\n    const images = props.images\n    return (\n        <Stack id={props.id} direction=\"row\" className=\"width-100 shuffle scroll margin-10px\">\n        {images.length > 0 ?\n            images.map((item, index) => {\n                return (<img className=\"margin-5px image\" key={`pic${index}`} src={item.default} alt=\"\"/>);\n                }) :  <></>}\n    </Stack> \n    )\n}\n\nexport function Rotate(props) {\n    const images = props.images;\n    const browser = navigator.userAgent.toLowerCase().includes(\"chrome\")? \"chrome\" : \"safari\";\n    \n    return (\n        <div id={props.id} className=\"width-100 height-75vw margin-20px flex justify-center\">\n            {images.map((image, index) => {\n              return <Button key={index} className={`${image['color']} gallery-project-box box-shadow cycle-start${index}-animation-${browser} padding-0 pointer flex column opacity-95`} onClick={() => {window.location = image['link']}}>\n                        <Typography className=\"text-white font-2-5vw\">{image['title']}</Typography>\n                        <Typography className=\"text-white font-1-5vw width-90\">{image['description']}</Typography>\n                        <img src={`${image['img'].default}`} alt=\"\" className=\"width-40 margin-top-20px\"/>\n                     </Button>\n            })}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}